package com.company;
import javax.swing.JFrame;
import java.awt.*;
import java.util.Objects;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author Mahmut
 */
public class ProgressBar  {

    public static JFrame frame;
    public static MotherThread motherThread;
    /**
     * Creates new form ProgressBar
     */
    public ProgressBar(MotherThread motherThread)
    {
        this.motherThread = motherThread;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        frame = new JFrame("YazLab 1.2");
        frame.setLocationRelativeTo(null);
        frame.setLocation(50,25);
        Dimension dimension = new Dimension(900,600);

        frame.setMaximumSize(dimension);
        frame.setMinimumSize(dimension);
        frame.getContentPane().setLayout(null);

        Buton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        progress2 = new javax.swing.JProgressBar();
        progress = new javax.swing.JProgressBar();
        progress3 = new javax.swing.JProgressBar();
        progress4 = new javax.swing.JProgressBar();
        progress5= new javax.swing.JProgressBar();
        progress6 = new javax.swing.JProgressBar();
        progress7 = new javax.swing.JProgressBar();
        progress8= new javax.swing.JProgressBar();
        progress9 = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();

        frame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Buton.setText("Baslat");

        Buton.setBounds(400,25,100,25);
        frame.getContentPane().add(Buton);
        Buton.addActionListener(evt -> ButonActionPerformed(evt));

        jLabel1.setText("Ana Sunucu : ");
        Font font = new Font("Courier", Font.BOLD,12);
        jLabel1.setFont(font);
        jLabel1.setBounds(55,75,200,25);
        frame.getContentPane().add(jLabel1);

        jProgressBar1.setMaximum(10000);
        jProgressBar1.setStringPainted(true);
        jProgressBar1.setBounds(50,100,200,20);
        frame.getContentPane().add(jProgressBar1);

        //altsunucular
        jLabel2.setText("Alt Sunucular : ");
        jLabel2.setFont(font);
        jLabel2.setBounds(55,140,200,25);
        frame.getContentPane().add(jLabel2);

        progress.setMaximum(5000);
        progress.setStringPainted(true);
        progress.setBounds(50,170,200,20);
        frame.getContentPane().add(progress);

        progress2.setMaximum(5000);
        progress2.setStringPainted(true);
        progress2.setBounds(50,200,200,20);
        frame.getContentPane().add(progress2);

        progress3.setMaximum(5000);
        progress3.setStringPainted(true);
        progress3.setBounds(50, 230, 200, 20);
        progress3.setVisible(false);
        frame.getContentPane().add(progress3);

        progress4.setMaximum(5000);
        progress4.setStringPainted(true);
        progress4.setBounds(50, 260, 200, 20);
        progress4.setVisible(false);
        frame.getContentPane().add(progress4);

        progress5.setMaximum(5000);
        progress5.setStringPainted(true);
        progress5.setBounds(50, 290, 200, 20);
        progress5.setVisible(false);
        frame.getContentPane().add(progress5);

        progress6.setMaximum(5000);
        progress6.setStringPainted(true);
        progress6.setBounds(50, 320, 200, 20);
        progress6.setVisible(false);
        frame.getContentPane().add(progress6);

        progress7.setMaximum(5000);
        progress7.setStringPainted(true);
        progress7.setBounds(50, 350, 200, 20);
        progress7.setVisible(false);
        frame.getContentPane().add(progress7);

        progress8.setMaximum(5000);
        progress8.setStringPainted(true);
        progress8.setBounds(50, 380, 200, 20);
        progress8.setVisible(false);
        frame.getContentPane().add(progress8);

        progress9.setMaximum(5000);
        progress9.setStringPainted(true);
        progress9.setBounds(50, 410, 200, 20);
        progress9.setVisible(false);
        frame.getContentPane().add(progress9);


        /*javax.swing.GroupLayout layout = new javax.swing.GroupLayout(frame.getContentPane());
        frame.getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(390, 390, 390)
                                                .addComponent(Buton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel1)
                                                                .addGap(89, 89, 89)
                                                                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))

                                .addContainerGap(434, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)

                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(Buton)
                                                .addGap(31, 31, 31)
                                                .addComponent(jLabel1)))
                                .addGap(44, 44, 44)
                                .addComponent(jLabel2)
                                .addContainerGap(226, Short.MAX_VALUE))
        );*/


        frame.pack();
    }// </editor-fold>

    private void ButonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        Runner runner = new Runner();
        runner.run();


        Thread t1 = new Thread(() -> {

            while(true) {
                try {
                    TimeUnit.MILLISECONDS.sleep(500);
                } catch (InterruptedException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }


                jProgressBar1.setValue(motherThread.data.deger);
                progress.setValue(motherThread.subList.get(0).currentReq);
                progress2.setValue(motherThread.subList.get(1).currentReq);

                //System.out.println(motherThread.progressBarArrayList.size());
                for(int i = 0; i < motherThread.subList.size(); i++) {
                    motherThread.progressBarArrayList.get(i).setValue(motherThread.subList.get(i).currentReq);
                    frame.repaint();
                }

                if (motherThread.progressBarArrayList.size() >= 3) {
                    progress3.setVisible(true);
                    progress3.setValue(motherThread.subList.get(2).currentReq);
                    if (motherThread.subList.get(2).currentReq <= 20) {
                        frame.remove(progress3);
                        motherThread.progressBarArrayList.remove(2);
                    }
                }
                if (motherThread.progressBarArrayList.size() >= 4) {
                    progress4.setVisible(true);
                    progress4.setValue(motherThread.subList.get(3).currentReq);
                    if (motherThread.subList.get(3).currentReq <= 20) {
                        frame.remove(progress4);
                        motherThread.progressBarArrayList.remove(3);
                    }
                }

                if (motherThread.progressBarArrayList.size() >= 5) {
                    progress5.setVisible(true);
                    progress5.setValue(motherThread.subList.get(4).currentReq);
                    if (motherThread.subList.get(4).currentReq <= 20) {
                        frame.remove(progress5);
                        motherThread.progressBarArrayList.remove(4);
                    }
                }

                if (motherThread.progressBarArrayList.size() >= 6) {
                    progress6.setVisible(true);
                    progress6.setValue(motherThread.subList.get(5).currentReq);
                    if (motherThread.subList.get(5).currentReq <= 20) {
                        frame.remove(progress6);
                        motherThread.progressBarArrayList.remove(5);
                    }
                }

                if (motherThread.progressBarArrayList.size() >= 7) {
                    progress7.setVisible(true);
                    progress7.setValue(motherThread.subList.get(6).currentReq);
                    if (motherThread.subList.get(6).currentReq <= 20) {
                        frame.remove(progress7);
                        motherThread.progressBarArrayList.remove(6);
                    }
                }

                if (motherThread.progressBarArrayList.size() >= 8) {
                    progress8.setVisible(true);
                    progress8.setValue(motherThread.subList.get(7).currentReq);
                    if (motherThread.subList.get(7).currentReq <= 20) {
                        frame.remove(progress8);
                        motherThread.progressBarArrayList.remove(7);
                    }
                }

                if (motherThread.progressBarArrayList.size() >= 9) {
                    progress9.setVisible(true);
                    progress9.setValue(motherThread.subList.get(8).currentReq);
                    if (motherThread.subList.get(8).currentReq <= 20) {
                        frame.remove(progress9);
                        motherThread.progressBarArrayList.remove(8);
                    }
                }



            }
        });

        t1.start();



    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgressBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgressBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgressBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgressBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    ProgressBar window = new ProgressBar(motherThread);
                    window.frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton Buton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JProgressBar progress;
    public javax.swing.JProgressBar progress2;
    public javax.swing.JProgressBar progress3;
    public javax.swing.JProgressBar progress4;
    public javax.swing.JProgressBar progress5;
    public javax.swing.JProgressBar progress6;
    public javax.swing.JProgressBar progress7;
    public javax.swing.JProgressBar progress8;
    public javax.swing.JProgressBar progress9;

    public javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration
}
